
/*
####### Generated by JavaToDart Wed Dec 19 22:12:26 SAST 2018
####### rigged up by AM Esq.
*/

class ConfigDTO {
	String configID;
	String associationID;
	String associationName;
	String stringDate;
	int driverLogStartHour;
	int driverLogEndHour;
	int driverLogFrequencyMinutes;
	int fenceDwellSeconds;
	int pointsPerCommuterRequest;
	int totalPointsForVoucher;
	int numberOfDaysForValidVoucher;
	int commuterRequestExpirationMinutes;
	int safetyLogIntervalSeconds;
	int safetyLogPeriodHours;
	int date;
	bool adsOn;
	bool neuraOn;
	bool hyperTrackOn;
	bool wifiTrackOnly;
	String region;
	String language;
	String path;

ConfigDTO({
	this.configID,
	this.associationID,
	this.associationName,
	this.stringDate,
	this.driverLogStartHour,
	this.driverLogEndHour,
	this.driverLogFrequencyMinutes,
	this.fenceDwellSeconds,
	this.pointsPerCommuterRequest,
	this.totalPointsForVoucher,
	this.numberOfDaysForValidVoucher,
	this.commuterRequestExpirationMinutes,
	this.safetyLogIntervalSeconds,
	this.safetyLogPeriodHours,
	this.date,
	this.adsOn,
	this.neuraOn,
	this.hyperTrackOn,
	this.wifiTrackOnly,
	this.region,
	this.language,
});

ConfigDTO.fromJson(Map data) {
	this.configID = data['configID'];
	this.associationID = data['associationID'];
	this.associationName = data['associationName'];
	this.stringDate = data['stringDate'];
	this.driverLogStartHour = data['driverLogStartHour'];
	this.driverLogEndHour = data['driverLogEndHour'];
	this.driverLogFrequencyMinutes = data['driverLogFrequencyMinutes'];
	this.fenceDwellSeconds = data['fenceDwellSeconds'];
	this.pointsPerCommuterRequest = data['pointsPerCommuterRequest'];
	this.totalPointsForVoucher = data['totalPointsForVoucher'];
	this.numberOfDaysForValidVoucher = data['numberOfDaysForValidVoucher'];
	this.commuterRequestExpirationMinutes = data['commuterRequestExpirationMinutes'];
	this.safetyLogIntervalSeconds = data['safetyLogIntervalSeconds'];
	this.safetyLogPeriodHours = data['safetyLogPeriodHours'];
	this.date = data['date'];
	this.adsOn = data['adsOn'];
	this.neuraOn = data['neuraOn'];
	this.hyperTrackOn = data['hyperTrackOn'];
	this.wifiTrackOnly = data['wifiTrackOnly'];
	this.region = data['region'];
	this.language = data['language'];
	this.path = data['path'];
}

Map<String, dynamic> toJson() => <String, dynamic>{
	'configID': configID,
	'associationID': associationID,
	'associationName': associationName,
	'stringDate': stringDate,
	'driverLogStartHour': driverLogStartHour,
	'driverLogEndHour': driverLogEndHour,
	'driverLogFrequencyMinutes': driverLogFrequencyMinutes,
	'fenceDwellSeconds': fenceDwellSeconds,
	'pointsPerCommuterRequest': pointsPerCommuterRequest,
	'totalPointsForVoucher': totalPointsForVoucher,
	'numberOfDaysForValidVoucher': numberOfDaysForValidVoucher,
	'commuterRequestExpirationMinutes': commuterRequestExpirationMinutes,
	'safetyLogIntervalSeconds': safetyLogIntervalSeconds,
	'safetyLogPeriodHours': safetyLogPeriodHours,
	'date': date,
	'adsOn': adsOn,
	'neuraOn': neuraOn,
	'hyperTrackOn': hyperTrackOn,
	'wifiTrackOnly': wifiTrackOnly,
	'region': region,
	'language': language,
	'path': path,
	
};

}