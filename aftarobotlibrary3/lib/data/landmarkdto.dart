/*
####### Generated by JavaToDart Wed Dec 19 22:12:26 SAST 2018
####### rigged up by AM Esq.
*/

import 'package:latlong/latlong.dart';

class LandmarkDTO with LandmarkDistance {
  String landmarkID;
  String cityID;
  String associationID;
  String routeID;
  String countryID;
  String routeName;
  String associationName;
  int rankSequenceNumber;
  double latitude;
  double longitude;
  String landmarkName;
  String status;
  String cityName;
  String stringDate;
  int date;
  bool thisIsMainRank;
  String path, routePath;

  LandmarkDTO({
    this.landmarkID,
    this.cityID,
    this.associationID,
    this.routeID,
    this.countryID,
    this.routeName,
    this.associationName,
    this.rankSequenceNumber,
    this.latitude,
    this.longitude,
    this.landmarkName,
    this.status,
    this.cityName,
    this.stringDate,
    this.date,
    this.routePath,
    this.thisIsMainRank,
  });

  LandmarkDTO.fromJson(Map data) {
    this.landmarkID = data['landmarkID'];
    this.cityID = data['cityID'];
    this.associationID = data['associationID'];
    this.routeID = data['routeID'];
    this.countryID = data['countryID'];
    this.routeName = data['routeName'];
    this.associationName = data['associationName'];
    this.rankSequenceNumber = data['rankSequenceNumber'];

//    if (data['point'] != null) {
//      this.point =
//          GeoPoint(data['point']['latitude'], data['point']['longitude']);
//    }

    if (data['latitude'] != null) {
      if (data['latitude'] is double) {
        this.latitude = data['latitude'];
      } else {
        this.latitude = double.parse(data['latitude'].toString());
      }
    }
    if (data['longitude'] != null) {
      if (data['longitude'] is double) {
        this.longitude = data['longitude'];
      } else {
        this.longitude = double.parse(data['longitude'].toString());
      }
    }
    this.landmarkName = data['landmarkName'];
    this.status = data['status'];
    this.cityName = data['cityName'];
    this.stringDate = data['stringDate'];
    this.date = data['date'];
    this.path = data['path'];
    this.routePath = data['routePath'];
  }

  Map<String, dynamic> toJson() {
//    Map<String, dynamic> mPoint;
//    if (point != null) {
//      mPoint = {
//        'latitude': point.latitude,
//        'longiude': point.longitude,
//      };
//    }
    if (thisIsMainRank == null) {
      thisIsMainRank = false;
    }
    Map<String, dynamic> map = {
      'landmarkID': landmarkID,
      'cityID': cityID,
      'associationID': associationID,
      'routeID': routeID,
      'countryID': countryID,
      'routeName': routeName,
      'associationName': associationName,
      'rankSequenceNumber': rankSequenceNumber,
      'latitude': latitude,
      'longitude': longitude,
      'landmarkName': landmarkName,
      'status': status,
      'cityName': cityName,
      'stringDate': stringDate,
      'date': date,
      'thisIsMainRank': thisIsMainRank,
      'path': path,
      'routePath': routePath,
    };
    return map;
  }
}

class LandmarkDistance {
  DateTime dateTime;
  double distanceKM, distanceMetre;
  int landmarkSequenceFrom, landmarkSequence;
  Distance _distanceUtil = Distance();

  calculateDistance(
      {double fromLatitude,
      double fromLongitude,
      double toLatitude,
      double toLongitude}) {
    distanceKM = _distanceUtil.as(
        LengthUnit.Kilometer,
        new LatLng(fromLatitude, fromLongitude),
        new LatLng(toLatitude, toLongitude));

    distanceMetre = _distanceUtil(new LatLng(fromLatitude, fromLongitude),
        new LatLng(toLatitude, toLongitude));
  }
}
