import 'package:aftarobotlibrary3/data/userdto.dart';
import 'package:aftarobotlibrary3/data/vehicledto.dart';

/*
####### Generated by JavaToDart Wed Dec 19 22:12:26 SAST 2018
####### rigged up by AM Esq.
*/

class TripDTO {
  String tripID;
  String marshalID;
  String landmarkID;
  String vehicleID;
  String routeID;
  String associationID;
  String driverID;
  String ownerID;
  int numberOfPassengers;
  int dateDispatched;
  VehicleDTO vehicle;
  UserDTO marshall;
  UserDTO driver;
  String landmarkName;
  String status;
  String stringDateDispatched;
  String cityName;
  String routeName;
  String associatioName;
  bool scanned;
  String path;

  TripDTO({
    this.tripID,
    this.marshalID,
    this.landmarkID,
    this.vehicleID,
    this.routeID,
    this.associationID,
    this.driverID,
    this.ownerID,
    this.numberOfPassengers,
    this.dateDispatched,
    this.vehicle,
    this.marshall,
    this.driver,
    this.landmarkName,
    this.status,
    this.stringDateDispatched,
    this.cityName,
    this.routeName,
    this.associatioName,
    this.scanned,
  });

  TripDTO.fromJson(Map data) {
    this.tripID = data['tripID'];
    this.marshalID = data['marshalID'];
    this.landmarkID = data['landmarkID'];
    this.vehicleID = data['vehicleID'];
    this.routeID = data['routeID'];
    this.associationID = data['associationID'];
    this.driverID = data['driverID'];
    this.ownerID = data['ownerID'];
    this.numberOfPassengers = data['numberOfPassengers'];
    this.dateDispatched = data['dateDispatched'];
    this.vehicle = data['vehicle'];
    this.marshall = data['marshall'];
    this.driver = data['driver'];
    this.landmarkName = data['landmarkName'];
    this.status = data['status'];
    this.stringDateDispatched = data['stringDateDispatched'];
    this.cityName = data['cityName'];
    this.routeName = data['routeName'];
    this.associatioName = data['associatioName'];
    this.scanned = data['scanned'];
    this.path = data['path'];
  }

  Map<String, dynamic> toJson() => <String, dynamic>{
        'tripID': tripID,
        'marshalID': marshalID,
        'landmarkID': landmarkID,
        'vehicleID': vehicleID,
        'routeID': routeID,
        'associationID': associationID,
        'driverID': driverID,
        'ownerID': ownerID,
        'numberOfPassengers': numberOfPassengers,
        'dateDispatched': dateDispatched,
        'vehicle': vehicle,
        'marshall': marshall,
        'driver': driver,
        'landmarkName': landmarkName,
        'status': status,
        'stringDateDispatched': stringDateDispatched,
        'cityName': cityName,
        'routeName': routeName,
        'associatioName': associatioName,
        'scanned': scanned,
        'path': path,
      };
}
