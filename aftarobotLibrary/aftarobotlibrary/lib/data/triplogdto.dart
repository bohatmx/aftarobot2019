import 'package:aftarobotlibrary/data/userdto.dart';
import 'package:aftarobotlibrary/data/vehicledto.dart';

/*
####### Generated by JavaToDart Wed Dec 19 22:12:26 SAST 2018
####### rigged up by AM Esq.
*/

class TripLogDTO {
  VehicleDTO vehicle;
  int date;
  int tripStartDate;
  String tripLogID;
  String tripID;
  String driverID;
  String vehicleID;
  String dispatchVehicleID;
  String routeID;
  String routeName;
  String stringDate;
  String dispatchLandmarkID;
  String dispatchLandmarkName;
  double latitude;
  double longitude;
  UserDTO driver;
  double accuracy;
  String path;

  TripLogDTO({
    this.vehicle,
    this.date,
    this.tripStartDate,
    this.tripLogID,
    this.tripID,
    this.driverID,
    this.vehicleID,
    this.dispatchVehicleID,
    this.routeID,
    this.routeName,
    this.stringDate,
    this.dispatchLandmarkID,
    this.dispatchLandmarkName,
    this.latitude,
    this.longitude,
    this.driver,
    this.accuracy,
  });

  TripLogDTO.fromJson(Map data) {
    this.vehicle = data['vehicle'];
    this.date = data['date'];
    this.tripStartDate = data['tripStartDate'];
    this.tripLogID = data['tripLogID'];
    this.tripID = data['tripID'];
    this.driverID = data['driverID'];
    this.vehicleID = data['vehicleID'];
    this.dispatchVehicleID = data['dispatchVehicleID'];
    this.routeID = data['routeID'];
    this.routeName = data['routeName'];
    this.stringDate = data['stringDate'];
    this.dispatchLandmarkID = data['dispatchLandmarkID'];
    this.dispatchLandmarkName = data['dispatchLandmarkName'];
    this.latitude = data['latitude'];
    this.longitude = data['longitude'];
    this.driver = data['driver'];
    this.accuracy = data['accuracy'];
    this.path = data['path'];
  }

  Map<String, dynamic> toJson() => <String, dynamic>{
        'vehicle': vehicle,
        'date': date,
        'tripStartDate': tripStartDate,
        'tripLogID': tripLogID,
        'tripID': tripID,
        'driverID': driverID,
        'vehicleID': vehicleID,
        'dispatchVehicleID': dispatchVehicleID,
        'routeID': routeID,
        'routeName': routeName,
        'stringDate': stringDate,
        'dispatchLandmarkID': dispatchLandmarkID,
        'dispatchLandmarkName': dispatchLandmarkName,
        'latitude': latitude,
        'longitude': longitude,
        'driver': driver,
        'accuracy': accuracy,
        'path': path,
      };
}
