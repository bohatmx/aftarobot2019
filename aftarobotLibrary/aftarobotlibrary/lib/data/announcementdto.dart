import 'package:aftarobotlibrary/data/userdto.dart';

/*
####### Generated by JavaToDart Wed Dec 19 22:12:26 SAST 2018
####### rigged up by AM Esq.
*/

class AnnouncementDTO {
	static const int ASSOCIATION = 0;
	static const int ROUTE = 0;
	static const int LANDMARK = 0;
	static const int ADMINS = 0;
	static const int MARSHALS = 0;
	static const int OWNERS = 0;
	static const int DRIVERS = 0;
	static const int PATROLLERS = 0;
	static const int COMMUTERS = 0;
	static const int ROUTE_BUILDERS = 0;
	bool includesCommuters;
	String announcementID;
	String associationID;
	String userID;
	String routeID;
	String landmarkID;
	String associationName;
	String routeName;
	String landmarkName;
	String title;
	String message;
	String stringDate;
	UserDTO user;
	int priority;
	int announcementType;
	int date;
	int expiryDate;
	List photoList;
	String path;

AnnouncementDTO({
	this.includesCommuters,
	this.announcementID,
	this.associationID,
	this.userID,
	this.routeID,
	this.landmarkID,
	this.associationName,
	this.routeName,
	this.landmarkName,
	this.title,
	this.message,
	this.stringDate,
	this.user,
	this.priority,
	this.announcementType,
	this.date,
	this.expiryDate,
	this.photoList,
});

AnnouncementDTO.fromJson(Map data) {
	this.includesCommuters = data['includesCommuters'];
	this.announcementID = data['announcementID'];
	this.associationID = data['associationID'];
	this.userID = data['userID'];
	this.routeID = data['routeID'];
	this.landmarkID = data['landmarkID'];
	this.associationName = data['associationName'];
	this.routeName = data['routeName'];
	this.landmarkName = data['landmarkName'];
	this.title = data['title'];
	this.message = data['message'];
	this.stringDate = data['stringDate'];
	this.user = data['user'];
	this.priority = data['priority'];
	this.announcementType = data['announcementType'];
	this.date = data['date'];
	this.expiryDate = data['expiryDate'];
	this.photoList = data['photoList'];
	this.path = data['path'];
}

Map<String, dynamic> toJson() => <String, dynamic>{
	'includesCommuters': includesCommuters,
	'announcementID': announcementID,
	'associationID': associationID,
	'userID': userID,
	'routeID': routeID,
	'landmarkID': landmarkID,
	'associationName': associationName,
	'routeName': routeName,
	'landmarkName': landmarkName,
	'title': title,
	'message': message,
	'stringDate': stringDate,
	'user': user,
	'priority': priority,
	'announcementType': announcementType,
	'date': date,
	'expiryDate': expiryDate,
	'photoList': photoList,
	'path': path,
	
};

}